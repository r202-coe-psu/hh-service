#!/usr/bin/env python3

import optparse

from hhservice.api import models

def get_program_options(default_host='127.0.0.1',
            default_port=27017, default_dbname='test'):

    """
    Takes a flask.Flask instance and runs it. Parses 
    command-line flags to configure the app.
    """

    # Set up the command-line options
    parser = optparse.OptionParser()
    parser.add_option("-H", "--host",
                      help="Hostname of the database " + \
                           "[default %s]" % default_host,
                      default=default_host)
    parser.add_option("-P", "--port",
                      help="Port for the database " + \
                           "[default %s]" % default_port, type=int,
                      default=default_port)

    parser.add_option("-d", "--db",
            help="Database name " + \
            "[default %s]" % default_dbname,
            default=default_dbname)

    parser.add_option("-s", "--secret",
            help="Secret key " + \
            "[default %s]" % '',
            default='')



    # parser.add_option("-D", "--debug",
    #                   action="store_true", dest="debug",
    #                   help=optparse.SUPPRESS_HELP)

    options, _ = parser.parse_args()

    return options

def main():
    options = get_program_options()

    import mongoengine as me

   
    me.connection._connection_settings = {}
    me.connection._connections = {}
    me.connection._dbs = {}
    
    conn = me.connect(db=options.db,
                      host=options.host,
                      port=options.port,
                      alias='default')
    
    from hhservice.api.models.users import User
    user = User(
            username='admin',
            email='admin@hh.local',
            first_name='admin',
            last_name='admin',
            status='active',
            roles=['admin', 'user'])

    user.set_password('password', salt=options.secret)

    user.save()

    

if __name__ == '__main__':
    main()
